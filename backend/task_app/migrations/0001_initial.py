# Generated by Django 4.2.15 on 2025-04-04 16:00

import django.core.validators
from django.db import migrations, models
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, null=True, verbose_name='Answer')),
                ('photo_to_the_answer', models.ImageField(null=True, upload_to='answers_media/images/', verbose_name='Photo to answer')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archived')),
                ('archived_at', models.DateTimeField(blank=True, null=True, verbose_name='Archived at')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewed', models.BooleanField(default=False, verbose_name='Answer reviewed')),
                ('execution_time_answer', models.DurationField(blank=True, null=True, verbose_name='Execution time answer')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archived')),
                ('archived_at', models.DateTimeField(blank=True, null=True, verbose_name='Archived at')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archived')),
                ('archived_at', models.DateTimeField(blank=True, null=True, verbose_name='Archived at')),
                ('answer_to_the_task', models.CharField(verbose_name='Answer to task')),
                ('sequence_number', models.IntegerField(verbose_name='Sequence number')),
                ('title', models.CharField(max_length=30, unique=True, verbose_name='Title to task')),
                ('description', models.TextField(max_length=300, null=True, verbose_name='Description')),
                ('link_to_article', models.URLField(blank=True, null=True, verbose_name='Link to article')),
                ('additional_condition', models.CharField(choices=[('None', 'Without additional tasks'), ('Photo', 'Take a picture of the answer')], max_length=255, null=True, verbose_name='Additional condition')),
                ('docx_file', models.FileField(blank=True, null=True, upload_to='tasks_media/docx/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['docx'])], verbose_name='DOCX file')),
                ('photo_file', models.ImageField(blank=True, null=True, upload_to='tasks_media/images/', verbose_name='Photo file')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='tasks_media/video/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'MPG', 'mkv', 'mov'])], verbose_name='Video file')),
            ],
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_to_tasks', models.DurationField(blank=True, null=True, verbose_name='Time to task')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Title task list')),
                ('count_task', models.PositiveIntegerField(verbose_name='Count task')),
                ('status', models.CharField(choices=[('Archived', 'Archived'), ('Active', 'Active')], db_index=True, default='Created', max_length=20, verbose_name='Task status')),
                ('archived_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Archived at')),
                ('is_archived', models.BooleanField(db_index=True, default=False, verbose_name='Archived')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('archived_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
